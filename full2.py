from mido import Message, MidiFile, MidiTrack, MetaMessage, bpm2tempo
OCTAVE_SHIFT = 12  # +12 semitones = one octave up

def get_midi_note(note_name):
    note_base = {'C': 0, 'C#': 1, 'D': 2, 'D#': 3, 'E': 4,
                 'F': 5, 'F#': 6, 'G': 7, 'G#': 8, 'A': 9,
                 'A#': 10, 'B': 11}
    if isinstance(note_name, int):  # Support MIDI numbers
        return note_name
    return note_base[note_name[0].upper()] + 12 * 5  # Default: octave 5

# Setup
mid = MidiFile(ticks_per_beat=480)
tempo = bpm2tempo(175)
quarter = mid.ticks_per_beat

# Meta Track
meta_track = MidiTrack()
meta_track.append(MetaMessage('set_tempo', tempo=tempo))
meta_track.append(MetaMessage('time_signature', numerator=3, denominator=4, clocks_per_click=24, notated_32nd_notes_per_beat=8))
mid.tracks.append(meta_track)

# Placeholder melody & left-hand data
melody_events = [
    ('F', 0.5),
    ('A', 0.5),
    ('F', 0.5),
    ('E', 4.5),
    ('F', 0.5),
    ('A', 0.5),
    ('E', 0.5),
    ('D', 1.5),
    ('D', 0.5),
    ('F', 0.5),
    ('D', 0.5),
    ('C', 2.5),
    ('D', 0.5),
    ('A', 1.0),
    ('G', 1.5),
    ('D', 0.5),
    ('A', 1.0),
    ('G', 1.0),
    ('E', 0.19),
    ('F', 0.81),
    ('D', 4.5),
    ('F', 0.5),
    ('G', 0.5),
    ('F', 0.5),
    ('E', 4.5),
    ('E', 0.5),
    ('G', 0.5),
    ('E', 0.5),
    ('C', 1.5),
    ('C', 0.5),
    ('E', 0.5),
    ('C', 0.5),
    ('A#', 1.5),
    ('A#', 0.5),
    ('C', 0.5),
    ('A#', 1.5),
    ('A', 1.0),
    ('A#', 1.0),
    ('C', 1.5),
    ('D', 0.5),
    ('E', 2.0),
    ('C', 1.0),
    ('D', 1.0),
    ('E', 1.5),
    ('F', 0.5),
    ('A', 0.5),
    ('F', 0.5),
    ('E', 4.5),
    ('F', 0.5),
    ('A', 0.5),
    ('E', 0.5),
    ('D', 1.5),
    ('D', 0.5),
    ('F', 0.5),
    ('D', 0.5),
    ('C', 2.5),
    ('D', 0.5),
    ('A', 1.0),
    ('G', 1.5),
    ('D', 0.5),
    ('A', 1.0),
    ('G', 1.0),
    ('E', 0.19),
    ('F', 0.81),
    ('D', 4.5),
    ('F', 0.5),
    ('G', 0.5),
    ('F', 0.5),
    ('E', 4.5),
    ('E', 0.5),
    ('G', 0.5),
    ('E', 0.5),
    ('C', 1.5),
    ('C', 0.5),
    ('E', 0.5),
    ('C', 0.5),
    ('A#', 1.5),
    ('A#', 0.5),
    ('C', 0.5),
    ('A#', 1.5),
    ('A', 1.0),
    ('A#', 1.0),
    ('C', 1.5),
    ('D', 0.5),
    ('E', 2.0),
    ('C', 1.0),
    ('D', 1.0),
    ('E', 1.5),
    ('F', 0.5),
    ('A', 0.5),
    ('F', 0.5),
    ('E', 4.5),
    ('F', 0.5),
    ('A', 0.5),
    ('E', 0.5),
    ('D', 1.5),
    ('F', 0.5),
    ('A', 0.5),
    ('D', 0.5),
    ('E', 2.5),
    ('D', 0.5),
    ('F', 1.0),
    ('E', 1.5),
    ('D', 0.5),
    ('A', 1.0),
    ('B', 1.0),
    ('D', 1.0),
    ('D', 0.99),
    ('E', 1.01),
    ('F', 1.0),
    ('F', 0.25),
    ('E', 0.25),
    ('D', 1.0),
    ('F', 0.5),
    ('G', 0.5),
    ('F', 0.5),
    ('E', 4.5),
    ('E', 0.5),
    ('G', 0.5),
    ('E', 0.5),
    ('C', 1.5),
    ('C', 0.5),
    ('E', 0.5),
    ('C', 0.5),
    ('A#', 0.5),
    ('C', 0.5),
    ('D', 0.5),
    ('E', 0.5),
    ('G', 0.5),
    ('A', 0.5),
    ('A#', 0.18),
    ('C', 0.18),
    ('A#', 0.19),
    ('C', 0.18),
    ('A#', 0.18),
    ('C', 0.19),
    ('A#', 0.18),
    ('C', 0.19),
    ('A#', 0.18),
    ('C', 0.18),
    ('A#', 0.19),
    ('C', 0.18),
    ('A#', 0.19),
    ('C', 0.18),
    ('A#', 0.18),
    ('C', 0.29),
    ('A#', 0.18),
    ('C', 0.18),
    ('A#', 0.19),
    ('C', 0.18),
    ('A#', 0.18),
    ('C', 0.19),
    ('A#', 0.18),
    ('C', 0.19),
    ('A#', 0.18),
    ('C', 1.38),
    ('A#', 1.0),
    ('A', 1.5),
    ('G', 0.5),
    ('D', 1.0),
    ('A', 1.0),
    ('G', 1.0),
    ('A', 3.0),
    ('F', 3.0),
    ('A', 1.0),
    ('G', 1.5),
    ('F', 0.5),
    ('A', 1.0),
    ('F#', 1.0),
    ('D', 1.0),
    ('B', 1.0),
    ('C#', 0.5),
    ('D', 0.5),
    ('D#', 0.5),
    ('E', 0.5),
    ('F', 0.5),
    ('F#', 0.5),
    ('G', 0.5),
    ('G#', 0.5),
    ('A', 0.5),
    ('A#', 0.5),
    ('A#', 0.5),
    ('A', 0.5),
    ('G#', 0.5),
    ('G', 0.5),
    ('F#', 0.5),
    ('F', 0.5),
    ('E', 0.5),
    ('D#', 0.5),
    ('D', 0.5),
    ('C#', 0.5),
    ('C', 0.5),
    ('B', 0.5),
    ('E', 1.0),
    ('G', 1.5),
    ('D', 0.5),
    ('E', 1.0),
    ('A#', 1.0),
    ('B', 1.0),
    ('C', 3.0),
    ('C', 0.5),
    ('D', 0.5),
    ('E', 0.5),
    ('F', 0.5),
    ('G', 0.19),
    ('A', 0.31),
    ('F', 0.5),
    ('E', 4.5),
    ('F', 0.5),
    ('A', 0.5),
    ('E', 0.5),
    ('D', 1.5),
    ('D', 0.5),
    ('F', 0.5),
    ('A', 0.5),
    ('C', 2.5),
    ('F', 0.5),
    ('A', 1.0),
    ('G', 1.5),
    ('D', 0.5),
    ('A', 1.0),
    ('G', 1.0),
    ('E', 0.19),
    ('F', 0.81),
    ('D', 4.5),
    ('F', 0.5),
    ('G', 0.5),
    ('F', 0.5),
    ('E', 4.5),
    ('E', 0.5),
    ('G', 0.5),
    ('E', 0.5),
    ('C', 1.5),
    ('C', 0.5),
    ('E', 0.5),
    ('C', 0.5),
    ('A#', 4.0),
    ('A', 1.0),
    ('A', 1.0),
    ('A#', 1.0),
    ('A#', 1.0),
    ('C', 1.5),
    ('C', 1.5),
    ('D', 0.5),
    ('D', 0.5),
    ('E', 2.0),
    ('E', 2.0),
    ('C', 1.0),
    ('C', 1.0),
    ('D', 1.0),
    ('D', 1.0),
    ('E', 1.5),
    ('E', 1.5),
    ('F', 0.5),
    ('A', 0.5),
    ('F', 0.5),
    ('E', 10.5),
    ('F', 0.5),
    ('A', 0.5),
    ('F', 0.5),
    ('E', 10.5),
    ('F', 0.5),
    ('A', 0.5),
    ('F', 0.5),
    ('E', 4.5),
    ('F', 0.5),
    ('A', 0.5),
    ('E', 0.5),
    ('D', 1.5),
    ('D', 0.5),
    ('F', 0.5),
    ('D', 0.5),
    ('C', 2.5),
    ('B', 0.5),
    ('A', 1.0),
    ('G', 1.5),
    ('D', 0.5),
    ('A', 1.0),
    ('G', 1.0),
    ('F', 1.0),
    ('D', 4.5),
    ('F', 0.5),
    ('G', 0.5),
    ('F', 0.5),
    ('E', 4.5),
    ('E', 0.5),
    ('G', 0.5),
    ('E', 0.5),
    ('C', 1.5),
    ('C', 0.5),
    ('E', 0.5),
    ('C', 0.5),
    ('A#', 4.0),
    ('A', 1.0),
    ('A#', 1.0),
    ('C', 1.5),
    ('D', 0.5),
    ('E', 2.0),
    ('C', 1.0),
    ('D', 1.0),
    ('E', 13.5),
    ('F', 0.5),
    ('A', 0.5),
    ('F', 0.5),
    ('E', 4.5),
    ('F', 0.5),
    ('A', 0.5),
    ('E', 0.5),
    ('D', 1.5),
    ('D', 0.5),
    ('F', 0.5),
    ('D', 0.5),
    ('C', 2.5),
    ('D', 0.5),
    ('A', 1.0),
    ('G', 1.5),
    ('D', 0.5),
    ('A', 1.0),
    ('G', 1.0),
    ('F', 1.0),
    ('D', 4.5),
    ('F', 0.5),
    ('G', 0.5),
    ('F', 0.5),
    ('E', 4.5),
    ('E', 0.5),
    ('G', 0.5),
    ('E', 0.5),
    ('C', 1.5),
    ('C', 0.5),
    ('E', 0.5),
    ('C', 0.5),
    ('A#', 4.0),
    ('A', 1.0),
    ('A#', 1.0),
    ('C', 1.5),
    ('D', 0.5),
    ('E', 2.0),
    ('C', 1.0),
    ('D', 1.0),
    ('E', 1.5),
    ('F', 0.5),
    ('A', 0.5),
    ('F', 0.5),
    ('C', 11.99),
]

left_hand_events = [
    (['F'], 1.0),
    (['A', 'C'], 1.0),
    (['A', 'C'], 1.0),
    (['C'], 1.0),
    (['A', 'C'], 1.0),
    (['A', 'C'], 1.0),
    (['D'], 1.0),
    (['A', 'C'], 1.0),
    (['A', 'C'], 1.0),
    (['C'], 1.0),
    (['D'], 1.0),
    (['E'], 1.0),
    (['F'], 1.0),
    (['A', 'C'], 1.0),
    (['A', 'C'], 1.0),
    (['C'], 1.0),
    (['A', 'C'], 1.0),
    (['A', 'C'], 1.0),
    (['D'], 1.0),
    (['A', 'C'], 1.0),
    (['A', 'C'], 1.0),
    (['C'], 1.0),
    (['A', 'C'], 1.0),
    (['A', 'C'], 1.0),
    (['B'], 1.0),
    (['C', 'F', 'G'], 1.0),
    (['C', 'F', 'G'], 1.0),
    (['B'], 1.0),
    (['C', 'F', 'G'], 1.0),
    (['C', 'F', 'G'], 1.0),
    (['B'], 1.0),
    (['C', 'F', 'G'], 1.0),
    (['C', 'F', 'G'], 1.0),
    (['B'], 1.0),
    (['C', 'F', 'G'], 1.0),
    (['C', 'F', 'G'], 1.0),
    (['E'], 1.0),
    (['G', 'C'], 1.0),
    (['G', 'C'], 1.0),
    (['D'], 1.0),
    (['G', 'C'], 1.0),
    (['G', 'C'], 1.0),
    (['C'], 1.0),
    (['E', 'G'], 1.0),
    (['E', 'G'], 1.0),
    (['A#'], 1.0),
    (['E', 'G'], 1.0),
    (['E', 'G'], 1.0),
    (['F'], 1.0),
    (['A', 'C'], 1.0),
    (['A', 'C'], 1.0),
    (['F'], 1.0),
    (['A', 'C'], 1.0),
    (['A', 'C'], 1.0),
    (['C'], 1.0),
    (['E', 'G'], 1.0),
    (['E', 'G'], 1.0),
    (['C', 'E', 'G'], 3.0),
    (['F'], 1.0),
    (['A', 'C'], 1.0),
    (['A', 'C'], 1.0),
    (['C'], 1.0),
    (['A', 'C'], 1.0),
    (['A', 'C'], 1.0),
    (['D'], 1.0),
    (['A', 'C'], 1.0),
    (['A', 'C'], 1.0),
    (['C'], 1.0),
    (['A', 'C'], 1.0),
    (['A', 'C'], 1.0),
    (['B'], 1.0),
    (['C', 'F', 'G'], 1.0),
    (['C', 'F', 'G'], 1.0),
    (['B'], 1.0),
    (['C', 'F', 'G'], 1.0),
    (['C', 'F', 'G'], 1.0),
    (['B'], 1.0),
    (['C', 'F', 'G'], 1.0),
    (['C', 'F', 'G'], 1.0),
    (['B'], 1.0),
    (['C', 'F', 'G'], 1.0),
    (['C', 'F', 'G'], 1.0),
    (['E'], 1.0),
    (['G', 'C'], 1.0),
    (['G', 'C'], 1.0),
    (['D'], 1.0),
    (['G', 'C'], 1.0),
    (['G', 'C'], 1.0),
    (['C'], 1.0),
    (['E', 'G'], 1.0),
    (['E', 'G'], 1.0),
    (['A#'], 1.0),
    (['E', 'G'], 1.0),
    (['E', 'G'], 1.0),
    (['F'], 1.0),
    (['A', 'C'], 1.0),
    (['A', 'C'], 1.0),
    (['F'], 1.0),
    (['A', 'C'], 1.0),
    (['A', 'C'], 1.0),
    (['C'], 1.0),
    (['E', 'G'], 1.0),
    (['E', 'G'], 1.0),
    (['C', 'E', 'G'], 3.0),
    (['F'], 1.0),
    (['A', 'C'], 1.0),
    (['A', 'C'], 1.0),
    (['C'], 1.0),
    (['A', 'C'], 1.0),
    (['A', 'C'], 1.0),
    (['D'], 1.0),
    (['A', 'C'], 1.0),
    (['A', 'C'], 1.0),
    (['C'], 1.0),
    (['A', 'C'], 1.0),
    (['A', 'C'], 1.0),
    (['B'], 1.0),
    (['C', 'F', 'G'], 1.0),
    (['C', 'F', 'G'], 1.0),
    (['B'], 1.0),
    (['C', 'F', 'G'], 1.0),
    (['C', 'F', 'G'], 1.0),
    (['B'], 1.0),
    (['C', 'F', 'G'], 1.0),
    (['C', 'F', 'G'], 1.0),
    (['B'], 1.0),
    (['C', 'F', 'G'], 1.0),
    (['C', 'F', 'G'], 1.0),
    (['E', 'G', 'C'], 3.0),
    (['D', 'G', 'C'], 3.0),
    (['C', 'E', 'G'], 3.0),
    (['A#', 'E', 'G'], 3.0),
    (['C'], 1.0),
    (['E', 'G'], 1.0),
    (['E', 'G'], 1.0),
    (['G'], 1.0),
    (['E', 'G'], 1.0),
    (['E', 'G'], 1.0),
    (['C'], 1.0),
    (['E', 'G'], 1.0),
    (['E', 'G'], 1.0),
    (['G'], 1.0),
    (['E', 'G'], 1.0),
    (['E', 'G'], 1.0),
    (['F'], 1.0),
    (['F', 'A'], 1.0),
    (['F', 'A'], 1.0),
    (['C'], 1.0),
    (['F', 'A'], 1.0),
    (['F', 'A'], 1.0),
    (['F'], 1.0),
    (['F', 'A'], 1.0),
    (['F', 'A'], 1.0),
    (['D'], 1.0),
    (['F', 'B'], 1.0),
    (['F', 'B'], 1.0),
    (['B'], 1.0),
    (['F', 'B'], 5.0),
    (['D'], 1.0),
    (['F', 'B'], 5.0),
    (['E', 'G', 'C'], 6.0),
    (['G#', 'C', 'E'], 6.0),
    (['F'], 1.0),
    (['A', 'C'], 2.0),
    (['C'], 3.0),
    (['D'], 1.0),
    (['A', 'C'], 2.0),
    (['C'], 1.0),
    (['A', 'C'], 2.0),
    (['B'], 1.0),
    (['G', 'B'], 2.0),
    (['G'], 1.0),
    (['G', 'B'], 2.0),
    (['B'], 1.0),
    (['G', 'B'], 2.0),
    (['D'], 1.0),
    (['G', 'B'], 2.0),
    (['E'], 1.0),
    (['G', 'C'], 2.0),
    (['D'], 1.0),
    (['G', 'C'], 2.0),
    (['C'], 1.0),
    (['E', 'G'], 2.0),
    (['A#'], 3.0),
    (['F', 'A', 'C'], 6.0),
    (['C', 'E', 'G'], 6.0),
    (['F'], 1.0),
    (['A', 'C'], 1.0),
    (['A', 'C'], 1.0),
    (['C'], 1.0),
    (['A', 'C'], 1.0),
    (['A', 'C'], 1.0),
    (['D'], 0.75),
    (['A', 'C'], 0.25),
    (['A', 'C'], 1.0),
    (['A', 'C'], 1.0),
    (['C'], 1.0),
    (['A', 'C'], 4.0),
    (['F'], 0.5),
    (['E'], 3.5),
    (['F'], 6.0),
    (['F', 'A', 'C'], 3.0),
    (['E', 'A', 'C'], 3.0),
    (['F', 'A', 'C'], 3.0),
    (['D#', 'A', 'C'], 3.0),
    (['D', 'G', 'B'], 3.0),
    (['D', 'G'], 3.0),
    (['D', 'G', 'B'], 3.0),
    (['D', 'G'], 3.0),
    (['E', 'G', 'C'], 3.0),
    (['D', 'G', 'C'], 3.0),
    (['C', 'E', 'G'], 3.0),
    (['A#', 'E', 'G'], 3.0),
    (['F', 'A', 'C'], 6.0),
    (['E', 'G', 'C'], 6.0),
    (['A', 'F'], 3.0),
    (['A', 'E'], 3.0),
    (['A', 'F'], 3.0),
    (['A', 'E'], 3.0),
    (['A', 'F'], 3.0),
    (['A', 'E'], 3.0),
    (['A', 'F'], 3.0),
    (['D#', 'A', 'C'], 3.0),
    (['B', 'D', 'G'], 3.0),
    (['A', 'D', 'G'], 3.0),
    (['G', 'B', 'D'], 3.0),
    (['F', 'B', 'D'], 3.0),
    (['C', 'E'], 3.0),
    (['C'], 3.0),
    (['G', 'A#', 'C'], 3.0),
    (['G', 'A#'], 3.0),
    (['C', 'F', 'A'], 6.0),
    (['G', 'C', 'E'], 6.0),
    (['F', 'A', 'C'], 3.0),
    (['F', 'A', 'C', 'E'], 3.0),
    (['F', 'A', 'C'], 3.0),
    (['F', 'A', 'C', 'E'], 3.0),
    (['C', 'F'], 3.0),
]

# === LEFT HAND TRACK ===
left_track = MidiTrack()
mid.tracks.append(left_track)

for chord, dur in left_hand_events:
    note_ons = []
    note_offs = []
    for note in chord:
        note_number = get_midi_note(note) - 24 + OCTAVE_SHIFT
        note_ons.append(Message('note_on', note=note_number, velocity=70, time=0))
        note_offs.append(Message('note_off', note=note_number, velocity=64, time=0))
    if note_ons:
        note_ons[0].time = 0  # First note sets delta-time
        left_track.extend(note_ons)
        note_offs[0].time = int(dur * quarter)
        left_track.extend(note_offs)

# === MELODY TRACK ===
melody_track = MidiTrack()
mid.tracks.append(melody_track)

# Wait 10.5 quarter notes before melody starts
start_delay = int(10.5 * quarter)
first = True

for note, dur in melody_events:
    note_number = get_midi_note(note) + OCTAVE_SHIFT
    ticks = int(dur * quarter)
    melody_track.append(Message('note_on', note=note_number, velocity=70, time=start_delay if first else 0))
    melody_track.append(Message('note_off', note=note_number, velocity=64, time=ticks))
    first = False

# Save it
mid.save('final.mid')
